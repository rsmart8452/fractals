<UserControl
  x:Class="FractalFlair.Views.DrawJuliaLineView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
  xmlns:vm="clr-namespace:FractalFlair.ViewModels"
  mc:Ignorable="d" 
  Validation.ErrorTemplate="{x:Null}"
  d:DesignWidth="200"
  d:DataContext="{d:DesignInstance vm:CalculatorViewModel}"
  Margin="5,0"
  >

  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Themes/BlueTheme.xaml"/>
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </UserControl.Resources>

  <DockPanel>
    <TextBlock DockPanel.Dock="Top" TextWrapping="Wrap" Margin="0,5">
      This function calculates Julia sets along a line that you define, then animates the results.
    </TextBlock>
    <TextBlock DockPanel.Dock="Top" TextWrapping="Wrap" Margin="0,5">Start by verifying the number of frames you want the animation to have, then draw a line across the displayed fractal where you want the animation calculated.</TextBlock>
    <!--<Separator DockPanel.Dock="Top" Margin="0,20"/>-->
    <Label DockPanel.Dock="Top" Margin="0,50,0,0">Iterations</Label>
    <TextBox Text="{Binding Iterations, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" Validation.ErrorTemplate="{StaticResource ValidationTooltipTemplate}" DockPanel.Dock="Top"/>
    <Label DockPanel.Dock="Top">Animation frames</Label>
    <TextBox DockPanel.Dock="Top" Text="{Binding AnimatedJuliaFrames, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" Validation.ErrorTemplate="{StaticResource ValidationTooltipTemplate}" />
    <StackPanel Orientation="Vertical" DockPanel.Dock="Top" Margin="0,50,0,0">
      <Label FontWeight="Bold" Padding="0">Output</Label>
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="10*"/>
          <ColumnDefinition Width="5"/>
          <ColumnDefinition Width="10*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Label Grid.Column="0" Grid.Row="0">Width</Label>
        <TextBox Grid.Column="0" Grid.Row="1" Text="{Binding RequestedWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"/>
        <Label Grid.Column="2" Grid.Row="0">Height</Label>
        <TextBox Grid.Column="2" Grid.Row="1" Text="{Binding RequestedHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"/>
      </Grid>
    </StackPanel>
    <Button Command="{Binding DrawJuliaOriginLineCancelCommand}" DockPanel.Dock="Bottom" Margin="10" Width="80" Height="30" HorizontalAlignment="Center" VerticalAlignment="Bottom">Cancel</Button>
  </DockPanel>
</UserControl>
